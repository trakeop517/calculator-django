# Generated by Django 5.2 on 2025-06-01 20:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('image_url', models.URLField(verbose_name='URL изображения')),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('logo_url', models.URLField(verbose_name='URL логотипа')),
                ('license_no', models.CharField(max_length=50, verbose_name='Регистрационный номер')),
                ('contact_info', models.TextField(verbose_name='Контактная информация')),
            ],
            options={
                'verbose_name': 'Банк',
                'verbose_name_plural': 'Банки',
            },
        ),
        migrations.CreateModel(
            name='CreditType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Тип кредита')),
            ],
            options={
                'verbose_name': 'Тип кредита',
                'verbose_name_plural': 'Типы кредитов',
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Вопрос')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Опрос',
                'verbose_name_plural': 'Опросы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('avatar', models.ImageField(blank=True, help_text='Загрузите изображение для аватара', null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=100, verbose_name='Тип действия')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID объекта')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог действия',
                'verbose_name_plural': 'Логи действий',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BudgetItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сумма')),
                ('item_type', models.CharField(choices=[('income', 'Доход'), ('expense', 'Расход')], max_length=7, verbose_name='Тип операции')),
                ('date', models.DateField(verbose_name='Дата операции')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_items', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Статья бюджета',
                'verbose_name_plural': 'Статьи бюджета',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CalculationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сумма кредита')),
                ('term', models.PositiveIntegerField(verbose_name='Срок (мес.)')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Процентная ставка')),
                ('result', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Ежемесячный платеж')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата расчета')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'История расчетов',
                'verbose_name_plural': 'История расчетов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Процентная ставка')),
                ('term_min', models.PositiveIntegerField(verbose_name='Минимальный срок (мес.)')),
                ('term_max', models.PositiveIntegerField(verbose_name='Максимальный срок (мес.)')),
                ('amount_min', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Минимальная сумма')),
                ('amount_max', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Максимальная сумма')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='core.bank', verbose_name='Банк')),
                ('credit_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='core.credittype', verbose_name='Тип кредита')),
            ],
            options={
                'verbose_name': 'Кредитное предложение',
                'verbose_name_plural': 'Кредитные предложения',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('offers', models.ManyToManyField(related_name='compared_in', to='core.creditoffer', verbose_name='Предложения для сравнения')),
            ],
            options={
                'verbose_name': 'Сравнение кредитов',
                'verbose_name_plural': 'Сравнения кредитов',
            },
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, verbose_name='Текст варианта')),
                ('votes', models.IntegerField(default=0, verbose_name='Количество голосов')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='core.poll', verbose_name='Опрос')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответов',
            },
        ),
        migrations.CreateModel(
            name='FavoriteOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='core.creditoffer', verbose_name='Кредитное предложение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_offers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранное предложение',
                'verbose_name_plural': 'Избранные предложения',
                'unique_together': {('user', 'offer')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '★ Очень плохо'), (2, '★★ Плохо'), (3, '★★★ Удовлетворительно'), (4, '★★★★ Хорошо'), (5, '★★★★★ Отлично')], default=5, verbose_name='Оценка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.creditoffer', verbose_name='Кредитное предложение')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'offer')},
            },
        ),
    ]
